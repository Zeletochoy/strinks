name: Fetch

on:
  schedule:
    - cron:  '42 3 * * *'  # everyday at 3:42
  workflow_dispatch:  # manual trigger

env:
  PYTHONUNBUFFERED: "1"

jobs:
  fetch:
    runs-on: ubuntu-latest
    environment: strinks.zeletochoy.fr
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: SSH authentication
        run: |
          mkdir -p ~/.ssh
          printenv SSH_KEY > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${HOST} >> ~/.ssh/known_hosts
          eval $(ssh-agent)
          ssh-add ~/.ssh/id_rsa
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          HOST: ${{ secrets.DEPLOY_HOST }}

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'setup.py'

      - name: Setup Japanese Tesseract
        run: sudo apt-get install tesseract-ocr-jpn

      - name: Install python dependencies
        run: |
          pip install -U pip
          pip install -e .

      - name: Download DB and cache
        run: |
          rsync -P ${USER}@${HOST}:${ROOT}/strinks/db.sqlite strinks/
          rsync -P ${USER}@${HOST}:${ROOT}/strinks/api/untappd/untappd_cache.json strinks/api/untappd/
          ls -la
          ls -la strinks
          ls -la strinks/api/untappd
        env:
          USER: ${{ secrets.DEPLOY_USER }}
          HOST: ${{ secrets.DEPLOY_HOST }}
          ROOT: ${{ secrets.DEPLOY_PATH }}

      - name: Fetch check-ins
        run: strinks-fetch-had
        env:
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
          UNTAPPD_CLIENT_ID: ${{ secrets.UNTAPPD_CLIENT_ID }}
          UNTAPPD_CLIENT_SECRET: ${{ secrets.UNTAPPD_CLIENT_SECRET }}

      - name: Scrape offerings
        run: |
          strinks-scrape -v | tee logs
          grep -zo '========== Summary ==========\(.*\n\)*' < logs >> $GITHUB_STEP_SUMMARY
          rm logs
        env:
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
          UNTAPPD_CLIENT_ID: ${{ secrets.UNTAPPD_CLIENT_ID }}
          UNTAPPD_CLIENT_SECRET: ${{ secrets.UNTAPPD_CLIENT_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Upload DB and cache
        run: |
          rsync -P strinks/db.sqlite ${USER}@${HOST}:${ROOT}/strinks/
          rsync -P strinks/api/untappd/untappd_cache.json ${USER}@${HOST}:${ROOT}/strinks/api/untappd/
        env:
          USER: ${{ secrets.DEPLOY_USER }}
          HOST: ${{ secrets.DEPLOY_HOST }}
          ROOT: ${{ secrets.DEPLOY_PATH }}

      - name: Delete SSH key
        if: always()
        run: rm -rf ~/.ssh

      - name: Create DB copy without users
        run: |
          mkdir -p github-pages
          cp strinks/db.sqlite github-pages
          strinks-drop-users -d github-pages/db.sqlite

      - name: Upload DB as artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: github-pages

  publish-db:
    needs:
      - fetch
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy DB to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
